var wx = require('./../../../adaptor.js').default;
module.exports=["stopLocalServiceDiscovery","startLocalServiceDiscovery","onLocalServiceResolveFail","onLocalServiceLost","onLocalServiceFound","onLocalServiceDiscoveryStop","offLocalServiceResolveFail","offLocalServiceLost","offLocalServiceFound","offLocalServiceDiscoveryStop","chooseMessageFile","compressImage","stopRecord","startRecord","stopBackgroundAudio","seekBackgroundAudio","playBackgroundAudio","pauseBackgroundAudio","onBackgroundAudioStop","onBackgroundAudioPlay","onBackgroundAudioPause","getBackgroundAudioPlayerState","stopVoice","playVoice","pauseVoice","getAvailableAudioSources","createAudioContext","createLivePusherContext","getFileSystemManager","loadFontFace","setTopBarText","getMenuButtonBoundingClientRect","onWindowResize","offWindowResize","onGyroscopeChange","stopGyroscope","startGyroscope","onDeviceMotionChange","startDeviceMotionListening","stopDeviceMotionListening","stopHCE","startHCE","sendHCEMessage","onHCEMessage","getHCEState","getBatteryInfoSync","getBatteryInfo","stopBluetoothDevicesDiscovery","startBluetoothDevicesDiscovery","openBluetoothAdapte","onBluetoothDeviceFound","onBluetoothAdapterStateChange","getConnectedBluetoothDevices","getBluetoothDevices","getBluetoothAdapterState","closeBluetoothAdapter","readBLECharacteristicValue","onBLEConnectionStateChange","onBLECharacteristicValueChange","notifyBLECharacteristicValueChange","getBLEDeviceServices","getBLEDeviceCharacteristics","createBLEConnection","closeBLEConnection","writeBLECharacteristicValue","stopBeaconDiscovery","startBeaconDiscovery","onBeaconUpdate","onBeaconServiceChange","getBeacons","stopWifi","startWifi","setWifiList","onWifiConnected","onGetWifiList","getWifiList","getConnectedWifi","connectWifi","getLaunchOptionsSync","onPageNotFound","onError","onAudioInterruptionBegin","onAppShow","onAppHide","offPageNotFound","offError","offAudioInterruptionBegin","offAppShow","offAppHide","offAudioInterruptionEnd","onAudioInterruptionEnd","chooseInvoice","getAccountInfoSync","reportMonitor","requestPayment","openCard","addCard","startSoterAuthentication","checkIsSupportSoterAuthentication","checkIsSoterEnrolledInDevice","updateShareMenu","showShareMenu","hideShareMenu","getShareInfo","createWorker"];