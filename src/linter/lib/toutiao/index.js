const utils=require("../utils/utils"),unsupportedFns=require("./unsupported-fns"),unsupportedTags=require("./unsupported-tags"),unsupportedAttrs=require("./unsupported-attrs"),wxmlLineRules=[e=>{const s="组件头条小程序未实现";for(let u=0;u<unsupportedTags.length;u++){const t=unsupportedTags[u],n=new RegExp(`<${t}\\s+`);if(e.match(n))return{source:e,rule:[t,s].join("")}}return null},e=>{const s=/\.\w+\(/,u=e.match(/wx:(for|if)=['"](.+)['"]/);return u&&s.test(u[0])?{source:u[0],rule:"条件/循环渲染，不能进行函数调用运算（如：`wx:if=\"{{['aa', 'bb'].indexOf('aa')===-1}}\"`）"}:null}],wxmlFileRules=[(e,s)=>{const u=[];return unsupportedAttrs.forEach(t=>{t.attrs.forEach(n=>{const r=new RegExp(`<${t}[^>]+${n}=`),l=e.match(r);if(l){const r=utils.calcLine(e,l),o=`头条小程序 ${t.tag} 组件不支持 ${n} 属性`;u.push({path:s,line:r,source:l,rule:o})}})}),u}],wxssLineRules=[],wxssFileRules=[],scriptLineRules=[e=>{const s="方法头条小程序未实现";for(let u=0;u<unsupportedFns.length;u++){const t=unsupportedFns[u],n=new RegExp(`\\.${t}\\(`);if(e.match(n))return{source:e,rule:[t,s].join("")}}return null},e=>{const s=e.match(/wx\.onSocketOpen/);return s?{source:s[0],rule:"`websocket`不能使用全局事件（如：`wx.onSocketOpen`）"}:null},e=>{const s=e.match(/\.selectComponent\(/);return s?{source:s[0],rule:"不支持`selectComponent`，可以通过监听属性的`observer`来实现外部的调用"}:null}],scriptFileRules=[];module.exports={wxmlLineRules:wxmlLineRules,wxmlFileRules:wxmlFileRules,wxssFileRules:wxssFileRules,wxssLineRules:wxssLineRules,scriptFileRules:scriptFileRules,scriptLineRules:scriptLineRules};