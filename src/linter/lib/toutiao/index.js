const wxmlLineRules=[e=>{const s=e.match(/<(movable-\w+|map|audio|canmera|live-\w+)[^>]*>/);return s?{source:s[0],rule:"不支持组件（如：`movable-area`、`movable-view`、`cover-view`、`cover-image`、`map`、`audio`、`canmera`等）"}:null},e=>{const s=/\.\w+\(/,l=e.match(/wx:(for|if)=['"](.+)['"]/);return l&&s.test(l[0])?{source:l[0],rule:"条件/循环渲染，不能进行函数调用运算（如：`wx:if=\"{{['aa', 'bb'].indexOf('aa')===-1}}\"`）"}:null}],wxmlFileRules=[],wxssLineRules=[],wxssFileRules=[],scriptLineRules=[e=>{const s=e.match(/wx\.onSocketOpen/);return s?{source:s[0],rule:"`websocket`不能使用全局事件（如：`wx.onSocketOpen`）"}:null},e=>{const s=e.match(/wx\.(startRecord|stopRecord)/);return s?{source:s[0],rule:"录音功能没有全局方法（`wx.startRecord`, `wx.stopRecord`）"}:null},e=>{const s=e.match(/wx\.\w+BackgroundAudio/);return s?{source:s[0],rule:"不支持背景音频"}:null},e=>{const s=e.match(/\.selectComponent\(/);return s?{source:s[0],rule:"不支持`selectComponent`，可以通过监听属性的`observer`来实现外部的调用"}:null}],scriptFileRules=[];module.exports={wxmlLineRules:wxmlLineRules,wxmlFileRules:wxmlFileRules,wxssFileRules:wxssFileRules,wxssLineRules:wxssLineRules,scriptFileRules:scriptFileRules,scriptLineRules:scriptLineRules};